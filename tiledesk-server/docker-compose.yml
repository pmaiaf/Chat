version: "3.7"
# networks:
#    backend:
#    frontend:
volumes:
   tiledesk-datadb:
   chat21-cf:
   tiledesk-server-config2:


services:
  dashboard:
   image: tiledesk/tiledesk-dashboard
   container_name: tiledesk-dashboard
   #required for old docker version
   env_file: 
      - .env
   environment: 
      - FEATURES_TOKEN=PAY:F-ANA:F-ACT:F-TRI:F-GRO:F-DEP:F-OPH:F-MTL:F-DGF:F-NAT:T
      - SERVER_BASE_URL=/api/
      - CHAT_BASE_URL=/chat/
      - WS_URL
      - WS_URL_RELATIVE=/ws/
      - WIDGET_LOCATION=/widget/launch.js
      - WIDGET_TEST_LOCATION=/widget/assets/twp/index.html
      - FIREBASE_APIKEY
      - FIREBASE_AUTHDOMAIN
      - FIREBASE_DATABASEURL
      - FIREBASE_PROJECT_ID
      - FIREBASE_STORAGEBUCKET
      - FIREBASE_MESSAGINGSENDERID
   ports:
      - "4500:80" #use expose if you want to block external access
  #  networks:
  #        frontend: 
  #           aliases:
  #               - dashboard
  webwidget:
   image: chat21/chat21-web-widget:latest
   container_name: chat21-web-widget  
   ports: 
      - "4200:80" # specify port forewarding
   env_file: 
      - .env
   environment: 
      - FIREBASE_APIKEY
      - FIREBASE_AUTHDOMAIN
      - FIREBASE_DATABASEURL
      - FIREBASE_PROJECT_ID
      - FIREBASE_STORAGEBUCKET
      - FIREBASE_MESSAGINGSENDERID
      - API_URL=/api/
   #links:
    # - proxy
  #  networks:
  #       frontend:
  #           aliases:
  #               - web-widget
  ionic:
   image: chat21/chat21-ionic
   container_name: chat21-ionic
   ports:
      - "8080:80" #use expose if you want to block external access
   env_file: 
      - .env
   environment: 
      - DASHBOARD_URL=/dashboard/
      - CHAT_SEND_BY_EMAIL_LINK=mailto:?subject=Transcript Chat Conversation&body=Hi,%0D%0A%0D%0Ahere the transcript:%0D%0A%0D%0Ahttps://api.tiledesk.com/v1/public/requests/
      - FIREBASESTORAGE_BASE_URL_IMAGE=https://firebasestorage.googleapis.com/v0/b/
      - SERVER_BASE_URL=/api/
      - FIREBASE_APIKEY
      - FIREBASE_AUTHDOMAIN
      - FIREBASE_DATABASEURL
      - FIREBASE_PROJECT_ID
      - FIREBASE_STORAGEBUCKET
      - FIREBASE_MESSAGINGSENDERID
      - FIREBASE_APP_ID
  #  networks:
  #     frontend: 
  #           aliases:
  #               - ionic
  proxy:
    image: tiledesk/tiledesk-docker-proxy
    container_name: tiledesk-docker-proxy
    #image: nginx
    #container_name: proxy
    #volumes:
     # - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80" # specify port forewarding
    depends_on:
      - server
      - dashboard
      - webwidget
    # networks:
    #     frontend:
    #         aliases:
    #             - proxy
    #     backend:
    command: [nginx-debug, '-g', 'daemon off;']
  cloud-functions:
   image: chat21/chat21-cloud-functions
   container_name: chat21-cloud-functions
   volumes:
     - chat21-cf:/home #persist firebase login
   ports:
     - "9005:9005" # specify port forewarding
     - "5000:5000"
  server:
    image: tiledesk/tiledesk-server
    container_name: tiledesk-server
    restart: always
    # networks:
    #       backend:
    #         aliases:
    #             - server
    volumes:    
        #  - type: bind
        #    source: ./
        #    target: /usr/src/app/
        - tiledesk-server-config2:/usr/src/app/confenv
      # - ./:/usr/src/app/

    #required for old docker version
    env_file:
      - .env
    environment: 
      - FIREBASE_PRIVATE_KEY
      - FIREBASE_CONFIG_FILE
      - FIREBASE_CLIENT_EMAIL
      - FIREBASE_PROJECT_ID
      - CHAT21_ENABLED
      - CHAT21_ENGINE
      - CHAT21_URL
      - CHAT21_APPID
      - CHAT21_ADMIN_TOKEN
      - MONGODB_URI=mongodb://mongo/tiledesk
      #- LOAD_DOTENV_SUBFOLDER=true
#    build: .
    depends_on:
      - mongo
    ports:
      - "3000:3000"
  mongo:
    container_name: mongo
    image: mongo
    command: --bind_ip_all
    volumes:
      - tiledesk-datadb:/data/db
    # networks:
    #       backend:
    #         aliases:
    #             - mongo
      ### Uncoment below if you want to map mongodb port
      #ports:
      #   - "27017:27017"
  ngrok:
    container_name: ngrok
    image: wernight/ngrok
    command: ngrok http server:3000
    # networks:
    #       backend:
    #         aliases:
    #             - ngrok
    ports:
     -  '4040:4040'
